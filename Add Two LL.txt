class Solution{
     public static Node reverse(Node head)
    {
       if(head==null){
            return null;
        }
        
        if(head.next==null){
            return head;
        }
        
        Node curr=head;
        Node prev=null;
        Node next=null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        
        return prev;
    }
    
    public static Node sum(Node first,Node second){
        Node ans=new Node(0);
        Node curr=ans;
        int carry=0;
        while(first!=null||second!=null||carry==1){
            int x=0;
            int y=0;
            int sum=0;
            if(first!=null){
                x=first.data;
            }
            
           if(second!=null){
               y=second.data;
           }
       
           
           sum=carry+x+y;
           int digit=sum%10;
           curr.next=new Node(digit);
          
           carry=sum/10;
           if(first!=null){
               first=first.next;
                 
               
           }
           
           if(second!=null){
               second=second.next;
              
           }
       curr=curr.next;
           
        }
        return ans.next;
    }
    //Function to add two numbers represented by linked list.
    static Node addTwoLists(Node first, Node second){
       first =reverse(first);
       second=reverse(second);
       Node sum=sum(first ,second);
       Node actualAns=reverse(sum);
       
       return actualAns;
       
    }
}